//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace databasefirstCRUD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CompanyDBEntities : DbContext
    {
        public CompanyDBEntities()
            : base("name=CompanyDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Employe> Employes { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
    
        public virtual int Employee_Insert(string ename, string job, Nullable<decimal> salary, string dname, ObjectParameter eno)
        {
            var enameParameter = ename != null ?
                new ObjectParameter("Ename", ename) :
                new ObjectParameter("Ename", typeof(string));
    
            var jobParameter = job != null ?
                new ObjectParameter("Job", job) :
                new ObjectParameter("Job", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(decimal));
    
            var dnameParameter = dname != null ?
                new ObjectParameter("Dname", dname) :
                new ObjectParameter("Dname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Employee_Insert", enameParameter, jobParameter, salaryParameter, dnameParameter, eno);
        }
    
        public virtual ObjectResult<Employee_select_Result> Employee_select(string dname)
        {
            var dnameParameter = dname != null ?
                new ObjectParameter("Dname", dname) :
                new ObjectParameter("Dname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee_select_Result>("Employee_select", dnameParameter);
        }
    }
}
